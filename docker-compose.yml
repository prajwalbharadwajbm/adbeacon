version: '3.8'

services:
  adbeacon:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adbeacon-app
    ports:
      - "8080:8080"
    environment:
      # Database configuration - connect to postgres service
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: adbeacon_dev_user
      DB_PASSWORD: adbeacon1234
      DB_NAME: adbeacon
      DB_SSLMODE: disable
      
      # Redis configuration - connect to redis service
      REDIS_ADDR: redis:6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0
      
      # Application configuration
      APP_ENV: docker
      LOG_LEVEL: info
      PORT: 8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - adbeacon-network

  postgres:
    image: postgres:15-alpine
    container_name: adbeacon-postgres
    environment:
      POSTGRES_USER: adbeacon_dev_user
      POSTGRES_PASSWORD: adbeacon1234
      POSTGRES_DB: adbeacon
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adbeacon_dev_user -d adbeacon"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - adbeacon-network

  redis:
    image: redis:7-alpine
    container_name: adbeacon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - adbeacon-network

  adminer:
    image: adminer:4.8.1
    container_name: adbeacon-adminer
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    networks:
      - adbeacon-network

volumes:
  postgres_data:
  redis_data:

networks:
  adbeacon-network:
    driver: bridge